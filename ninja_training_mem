#include <bits/stdc++.h>

using namespace std;

int f(int day,int last,vector<vector<int>>& v,vector<vector<int>>& dp){
	if(dp[day][last]!=-1)return dp[day][last];

	if (dp[day][last] != -1) return dp[day][last];

  if (day == 0) {
    int maxi = 0;
    for (int i = 0; i <= 2; i++) {
      if (i != last)
        maxi = max(maxi, v[0][i]);
    }
    return dp[day][last] = maxi;
  }

  int maxi = 0;
  for (int i = 0; i <= 2; i++) {
    if (i != last) {
      int activity = v[day][i] + f(day - 1, i, v, dp);
      maxi = max(maxi, activity);
    }

  }

  return dp[day][last] = maxi;
}

int ans(int n,vector<vector<int>>& v){
	vector<vector<int>> dp(n,vector<int> (4,-1));
	return f(n-1,3,v,dp);
}

int main() {

vector<vector<int>> v={{10,40,70},{20,50,80},{30,60,90}};
int n=v.size();
cout<<ans(n,v);
}
