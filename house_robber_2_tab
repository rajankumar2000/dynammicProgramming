#include <bits/stdc++.h>

using namespace std;

long long int solve(vector<int>& arr){
    int n = arr.size();
   
    vector<int> dp(n,-1);


    dp[0]=arr[0];

    for(int i=1; i<n; i++){
        long long int pick = arr[i];
        if(i>1)pick += dp[i-2];

        int long long nonPick = 0 + dp[i-1];
        
       dp[i]= max(pick, nonPick);
   }
  
    return dp[n-1];
}

long long int robStreet(int n, vector<int> &arr){
    vector<int> arr1;
    vector<int> arr2;
    
    if(n==1)
       return arr[0];
    
    for(int i=0; i<n; i++){
        
        if(i!=0) arr1.push_back(arr[i]);
        if(i!=n-1) arr2.push_back(arr[i]);
    }
    
    long long int ans1 = solve(arr1);
    // cout<<ans1<<endl;
    long long int ans2 = solve(arr2);
    // cout<<ans2<<endl;
    
    return max(ans1,ans2);
}


int main() {

  vector<int> arr{1,5,1,2,6};
  int n=arr.size();
  cout<<robStreet(n,arr);
}
